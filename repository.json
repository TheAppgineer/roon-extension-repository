[{
    "display_name": "Playback",
    "extensions": [{
        "author": "The Appgineer",
        "display_name": "Alarm Clock",
        "description": "Roon Extension to start or stop playback on a specific zone at a specific time",
        "repository": {
            "type": "git",
            "url": "https://github.com/TheAppgineer/roon-extension-alarm-clock.git"
        },
        "image": {
            "repo": "theappgineer/roon-extension-alarm-clock",
            "tags": {
                "amd64": "latest",
                "arm": "latest"
            },
            "binds": [
                "/usr/src/app/config.json"
            ],
            "options": {
                "env": {
                    "TZ": "Time Zone"
                }
            }
        }
    },
    {
        "author": "The Appgineer",
        "display_name": "Queue Bot",
        "description": "Roon Extension that lets the queue take control",
        "repository": {
            "type": "git",
            "url": "https://github.com/TheAppgineer/roon-extension-queue-bot.git"
        }
    },
    {
        "author": "The Appgineer",
        "display_name": "Random Radio",
        "description": "Roon Extension to play random tracks or albums",
        "repository": {
            "type": "git",
            "url": "https://github.com/TheAppgineer/roon-extension-random-radio.git"
        }
    },
    {
        "author": "Boris Schaedler",
        "display_name": "it'roXs!",
        "description": "Roon Extension for Android App it'roXs!",
        "repository": {
            "type": "git",
            "url": "https://github.com/bsc101/roon-extension-itroxs.git"
        }
    },
    {
        "author": "The Appgineer",
        "display_name": "CD Player",
        "description": "Extension that adds a CD player to your Roon system",
        "image": {
            "repo": "theappgineer/roon-extension-cd-player",
            "tags": {
                "amd64": "amd64",
                "arm": "arm32v6"
            },
            "binds": [
                "/home/worker/config.json"
            ],
            "options": {
                "devices": [
                    "/dev/cdrom:Optical Drive Path"
                ],
                "env": {
                    "CDROM_GROUP": "cdrom group ID (default 24)"
                }
            }
        }
    }],
    "repository": { "url": "" }
},
{
    "display_name": "Device Control",
    "extensions": [{
        "author": "Doc Bobo",
        "display_name": "Denon/Marantz AVR",
        "description": "Roon Volume Control Extension for Denon/Marantz AV receivers",
        "repository": {
            "type": "git",
            "url": "https://github.com/docbobo/roon-extension-denon.git"
        }
    },
    {
        "author": "Doc Bobo",
        "display_name": "Arcam AVR390/550/850/AV860/SR250",
        "description": "Roon Volume Control Extension for Arcam AVR390/550/850/AV860/SR250 receivers",
        "repository": {
            "type": "git",
            "url": "https://github.com/docbobo/roon-extension-arcam.git"
        }
    },
    {
        "author": "Boris Schaedler",
        "display_name": "Rotel Amps (IP Control)",
        "description": "Roon Volume/Source Control Extension to control Rotel amps via network",
        "repository": {
            "type": "git",
            "url": "https://github.com/bsc101/roon-extension-rotel.git"
        }
    },
    {
        "author": "Marcel van der Veldt",
        "display_name": "Onkyo/Pioneer AVR",
        "description": "Volume Control extension to control Onkyo/Pioneer AV receivers\nvia network",
        "repository": {
            "type": "git",
            "url": "https://github.com/marcelveldt/roon-extension-onkyo.git"
        }
    },
    {
        "author": "Roon Labs, LLC",
        "packager": "The Appgineer",
        "display_name": "Meridian Volume/Source Control",
        "description": "Roon extension for source and volume control of Meridian systems\nthat are not driven by Sooloos endpoints",
        "image": {
            "repo": "theappgineer/roon-extension-meridian",
            "tags": {
                "amd64": "amd64",
                "arm": "arm32v6"
            },
            "binds": [
                "/usr/src/app/config.json"
            ],
            "options": {
                "devices": [
                    ":Serial Device Path"
                ]
            }
        }
    },
    {
        "author": "Roon Labs, LLC",
        "packager": "The Appgineer",
        "display_name": "Devialet Phantom Volume Control",
        "description": "Roon Extension to let Roon control the Devialet Phantom Premier's\nvolume via UPnP",
        "repository": {
            "type": "git",
            "url": "https://github.com/RoonLabs/roon-extension-devialet-phantom-volume.git"
        },
        "image": {
            "repo": "theappgineer/roon-extension-devialet-phantom-volume",
            "tags": {
                "amd64": "amd64",
                "arm": "arm32v6"
            },
            "binds": [
                "/usr/src/app/config.json"
            ]
        }
    },
    {
        "author": "The Appgineer",
        "display_name": "TAG McLaren Audio Source Control",
        "description": "Roon extension for source control of TAG McLaren Audio devices",
        "image": {
            "repo": "theappgineer/roon-extension-tag-mclaren",
            "tags": {
                "arm": "latest"
            },
            "binds": [
                "/usr/src/app/config.json"
            ],
            "options": {
                "devices": [
                    ":Serial Device Path"
                ]
            }
        }
    },
    {
        "author": "Hasse Hagen Johansen",
        "display_name": "Roon Tradfri",
        "description": "Turn on/off Ikea Tradfri plug devices depending on zone state(playing / not playing)",
        "repository": {
            "type": "git",
            "url": "git+https://github.com/HasseJohansen/roon-extension-ikea-tradfri.git#0.0.6"
        }
    }],
    "repository": { "url": "" }
},
{
    "display_name": "Remote Control",
    "extensions": [{
        "author": "Doc Bobo",
        "display_name": "Logitech Harmony",
        "description": "Roon Source Control Extension to control Logitech Harmony activities",
        "repository": {
            "type": "git",
            "url": "https://github.com/docbobo/roon-extension-harmony.git"
        }
    },
    {
        "author": "Khazul",
        "display_name": "Deep Harmony",
        "description": "A Roon Extension for Logitech Harmony",
        "image": {
            "repo": "khazul/roon-extension-deep-harmony",
            "tags": {
                "amd64": "latest",
                "arm": "latest"
            },
            "config": {
                "Volumes": {
                    "/usr/src/app": {}
                },
                "HostConfig": {
                    "Binds": [ "deep-harmony-app:/usr/src/app" ]
                }
            }
        }
    },
    {
        "author": "Roon Labs, LLC",
        "packager": "The Appgineer",
        "display_name": "Griffin Powermate",
        "description": "Griffin Powermate USB controller",
        "image": {
            "repo": "theappgineer/roon-extension-powermate",
            "tags": {
                "amd64": "amd64",
                "arm": "arm32v6"
            },
            "binds": [
                "/usr/src/app/config.json"
            ],
            "options": {
                "devices": [
                    ":USB Device Path"
                ]
            }
        }
    },
    {
        "author": "Roon Labs, LLC",
        "packager": "The Appgineer",
        "display_name": "iPort Surface Mount with Buttons",
        "description": "Roon Extension to let the iPort Surface Mount with Buttons control Roon",
        "repository": {
            "type": "git",
            "url": "https://github.com/RoonLabs/roon-extension-iport-sm-buttons.git"
        },
        "image": {
            "repo": "theappgineer/roon-extension-iport-sm-buttons",
            "tags": {
                "amd64": "amd64",
                "arm": "arm32v6"
            },
            "binds": [
                "/usr/src/app/config.json"
            ]
        }
    }],
    "repository": { "url": "" }
},
{
    "display_name": "Web / Connectivity",
    "extensions": [{
        "author": "Mike Plugge",
        "display_name": "Web Controller",
        "description": "Roon Extension which provides a web interface based remote",
        "repository": {
            "type": "git",
            "url": "https://github.com/pluggemi/roon-web-controller.git"
        }
    },
    {
        "author": "Varun Randery",
        "display_name": "RESTful Roon Remote",
        "description": "Control Roon using HTTP GET requests from any device",
        "repository": {
            "type": "git",
            "url": "https://github.com/varunrandery/roon-remote.git"
        }
    },
    {
        "author": "David 'Nugget' McNett",
        "display_name": "Community DJ",
        "description": "Synchronize playback among multiple Roon Cores",
        "repository": {
            "type": "git",
            "url": "https://github.com/nugget/roon-community-dj.git"
        }
    }],
    "repository": { "url": "" }
},
{
    "display_name": "Entrypoints",
    "extensions": [{
        "author": "The Appgineer",
        "display_name": "Entrypoint Gateway",
        "description": "The gateway between all your Entrypoints and your Roon system",
        "image": {
            "repo": "theappgineer/entrypoint-gateway",
            "tags": {
                "amd64": "latest",
                "arm": "latest"
            },
            "binds": [
                "/home/worker/config.json"
            ],
            "options": {
                "env": {
                    "TZ": "Time Zone"
                }
            }
        }
    },
    {
        "author": "The Appgineer",
        "display_name": "Audio Entrypoint",
        "description": "An Entrypoint that lets Audio enter into your Roon system",
        "image": {
            "repo": "theappgineer/entrypoint-audio",
            "tags": {
                "amd64": "latest",
                "arm": "latest"
            },
            "binds": [
                "/home/worker/config.json"
            ],
            "config": {
                "HostConfig": {
                    "Devices": [{
                        "PathOnHost": "/dev/snd",
                        "PathInContainer": "/dev/snd",
                        "CgroupPermissions": "rwm"
                    }]
                }
            }
        }
    },
    {
        "author": "The Appgineer",
        "display_name": "BT Entrypoint",
        "description": "An Entrypoint that lets Bluetooth Audio enter into your Roon system",
        "image": {
            "repo": "theappgineer/entrypoint-bluetooth",
            "tags": {
                "amd64": "latest",
                "arm": "latest"
            },
            "binds": [
                "/home/worker/config.json"
            ],
            "config": {
                "HostConfig": {
                    "Binds": [
                        "/var/run/dbus:/var/run/dbus",
                        "/sys/class/bluetooth:/sys/class/bluetooth",
                        "/var/lib/bluetooth:/var/lib/bluetooth"
                    ],
                    "Privileged": true
                }
            }
        }
    },
    {
        "author": "The Appgineer",
        "display_name": "CD Entrypoint",
        "description": "An Entrypoint that lets CD Audio enter into your Roon system",
        "image": {
            "repo": "theappgineer/entrypoint-cd-audio",
            "tags": {
                "amd64": "latest",
                "arm": "latest"
            },
            "binds": [
                "/home/worker/config.json"
            ],
            "options": {
                "devices": [
                    "/dev/cdrom:Optical Drive Path"
                ],
                "env": {
                    "CDROM_GROUP": "cdrom group ID (default 24)"
                }
            }
        }
    }]
},
{
    "display_name": "Automation",
    "extensions": [{
        "author": "Floris Jan Galesloot",
        "display_name": "MQTT Extension",
        "description": "Integrate Roon into your home automation system using the MQTT protocol",
        "repository": {
            "type": "git",
            "url": "https://github.com/fjgalesloot/roon-extension-mqtt.git"
        },
        "image": {
            "repo": "fjgalesloot/roon-extension-mqtt",
            "tags": {
                "amd64": "latest"
            },
            "binds": [
                "/usr/src/app/config/config.json"
            ],
            "options": {
                "binds": [
                    "/usr/src/app/config/:Config folder"
                ]
            }
        }
    }],
    "repository": { "url": "" }
},
{
    "display_name": "Tools",
    "extensions": [{
        "author": "The Appgineer",
        "display_name": "Art Scraper",
        "description": "Roon Extension to scrape cover art images from your library",
        "repository": {
            "type": "git",
            "url": "https://github.com/TheAppgineer/roon-extension-art-scraper.git"
        }
    },
    {
        "author": "The Appgineer",
        "display_name": "CD Ripper",
        "description": "Extension that adds a CD ripper to your Roon system",
        "image": {
            "repo": "theappgineer/roon-extension-cd-ripper",
            "tags": {
                "amd64": "latest",
                "arm": "latest"
            },
            "binds": [
                "/home/worker/config.json",
                "/root/inserted"
            ],
            "options": {
                "devices": [
                    "/dev/cdrom:Optical Drive Path"
                ],
                "binds": [
                    "/root/music:Local Music Share (optional)"
                ]
            },
            "config": {
                "Volumes": {
                    "/root/.config/whipper": {},
                    "/output": {}
                },
                "HostConfig": {
                    "Binds": [
                        "whipper:/root/.config/whipper",
                        "staging:/output"
                    ]
                }
            }
        }
    }],
    "repository": { "url": "" }
}]
